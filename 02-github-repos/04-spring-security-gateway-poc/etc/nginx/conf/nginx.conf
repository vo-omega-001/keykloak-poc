
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;



events {
    worker_connections  1024;
}


http {
    include       mime.types;
    charset          utf-8;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	
	map $bearer_id_token $id_token {
		~Bearer\s+(.*?)$  $1;
		default           '';
	}

    #gzip  on;
    upstream oauth2-proxy {
        server 127.0.0.1:4180;
    }
    upstream keycloak {
        server hbg:8180;
    }    
    upstream dmg-mlt {
        server hbg:8280;
    }    
    upstream dmg-hmi {
        server hbg:8280;
    }
    upstream dmg-hmi-variables {
        server hbg:8280;
    }
    upstream dmg-api {
        server hbg:8280;
    }    
    upstream dmg-client {
        server hbg:8280;
    }
    upstream dmg-poc-api {
        server hbg:8280;
    }    
    upstream dmg-test {
        server hbg:8280;
    }
    

    server {
        listen       [::]:9090 ipv6only=off;
        server_name  HBG;       
        error_page   404              /404.html;
        error_page   500 502 503 504  /50x.html;
		
		proxy_buffers 4 256k;
		proxy_buffer_size 128k; 
		proxy_busy_buffers_size 256k;
		client_max_body_size 16M;
        
        location = /50x.html {
            root   html;
        }
        location @error401 {
            return 302 /;
        }
        ################################################################################################################################################
        # Oauth2-proxy interface
        #
        location ~* /(oauth2/|ping|ready) {
            proxy_intercept_errors                   on;
            proxy_set_header Host                    $host:$server_port;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
		
            # Redirect 403 from oauth2 proxy (CSRF failed) to sign in
            error_page 403 = /oauth2/sign_in;
		
            proxy_pass http://oauth2-proxy;
        }

        location /oauth2/sign_in {
            proxy_set_header Host                    $host:$server_port;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;

            proxy_pass http://oauth2-proxy/oauth2/sign_in;
        }
		
        location /logout {
            proxy_set_header Host             $host:$server_port;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;

            # Fetch OIDC ID Token
            auth_request /oauth2/auth;
            auth_request_set $bearer_id_token $upstream_http_authorization;

            proxy_set_header X-Auth-Request-Redirect $scheme://hbg:$server_port/dmg-oidc/realms/DMG-REALM/protocol/openid-connect/logout?id_token_hint=$id_token&post_logout_redirect_uri=$scheme%3A%2F%2Fhbg:$server_port%2Fdmg-test;

            proxy_pass http://oauth2-proxy/oauth2/sign_out;

            proxy_intercept_errors on;
            error_page 401 = @error401;
        }
        # location = /logoutsso { 
            # return 302 https://10.100.36.42/logout; 
        # }
        ################################################################################################################################################
        # Keycloak
        #
        location ~* /dmg-oidc {
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # rewrite ^/dmg-oidc/(.*)$    /$1 break;
                proxy_pass http://keycloak;
        }
		location  /getUserInfo {
		        # Check if user is logged in with oauth2-proxy
				# Recover user access_token from 'X-Auth-Request-Access-Token' using upstream nginx variables set by oauth2-proxy.
				auth_request /oauth2/auth;
				# Recover cookie if renew was done by oauth2-proxy
				auth_request_set $auth_cookie $upstream_http_set_cookie;
				add_header Set-Cookie $auth_cookie;
				# error_page 401 = /oauth2/sign_in?rd=http://hbg:9090$request_uri;
				
				auth_request_set $access_token $upstream_http_x_auth_request_access_token;
				proxy_set_header Authorization 'Bearer $access_token';
				
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
				
				add_header X-Authorization 'Bearer $access_token';
                
                proxy_pass http://keycloak/dmg-oidc/realms/DMG-REALM/protocol/openid-connect/userinfo;
				
				# content_by_lua_block {
					# ngx.exit(ngx.HTTP_ACCEPTED)
				# }
        }
		location  /discover {		        
				
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                proxy_pass http://keycloak/dmg-oidc/realms/DMG-REALM/.well-known/openid-configuration;
        }
        ################################################################################################################################################
        # DMG: backend
        #
        location ~* /dmg-mlt {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://dmg-mlt;
        }        
        #
        # DMG: frontend
        #
        location ~* /dmg-hmi {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://dmg-hmi;
        }
        #
        # DMG: frontend variables
        #
        location ~* /variables {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://dmg-hmi-variables;
        }
        ###############################################################################################################################################
        #
        # POC: backend
        #
        location ~* /dmg-api {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://dmg-api;
        }
        #
        # POC: frontend
        #
        location ~* /dmg-client {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://dmg-client;
        }    
        ###############################################################################################################################################
        #
        # POC 02: backend
        #
        location ~* /dmg-poc-api {
				# Check if user is logged in with oauth2-proxy
				# Recover user access_token from 'X-Auth-Request-Access-Token' using upstream nginx variables set by oauth2-proxy.
				auth_request /oauth2/auth;
				# Recover cookie if renew was done by oauth2-proxy
				auth_request_set $auth_cookie $upstream_http_set_cookie;
				add_header Set-Cookie $auth_cookie;
				error_page 401 = /oauth2/sign_in?rd=http://hbg:9090$request_uri;
				
				auth_request_set $access_token $upstream_http_x_auth_request_access_token;
				proxy_set_header Authorization 'Bearer $access_token';
				
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
				
				rewrite ^/dmg-poc-api/(.*)$    /dmg-api/$1 break;
                proxy_pass http://dmg-api;
        }
        #
        # POC 02: frontend
        #
        location ~* /dmg-test {
				# Check if user is logged in with oauth2-proxy
				# Recover user access_token from 'X-Auth-Request-Access-Token' using upstream nginx variables set by oauth2-proxy.
				auth_request /oauth2/auth;
				# Recover cookie if renew was done by oauth2-proxy
				auth_request_set $auth_cookie $upstream_http_set_cookie;
				add_header Set-Cookie $auth_cookie;
				error_page 401 = /oauth2/sign_in?rd=http://hbg:9090$request_uri;
				
				auth_request_set $access_token $upstream_http_x_auth_request_access_token;
				proxy_set_header Authorization 'Bearer $access_token';
				
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $http_host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-By $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://dmg-test;
        }        
    }
}
